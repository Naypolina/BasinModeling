import numpy as np
import conditions as cond
import functions as f
import matplotlib.pyplot as plt

# начальная глубина (м)
L_0 = 0
# длина отрезка по координате (м)
L = 2000
# число отрезков по координате
M = 200
# число отрезков по времени
N = 20000

# выбор шага по координате
h = L / M  # м

# задание массивов теплофизических характеристик
a_x = np.zeros(M + 1)  # температуропроводность
l_x = np.zeros(M + 1)  # теплопроводность

# глубина слоев залегания
x_slices = [0, 300, 440, 539, 633, 1243, 1468, 2198]

# теплофизические параметры, соответсвующие отдельным слоям
c_x = [964, 1079, 964, 1052, 861, 976, 917]
rho_x = [2.67, 2.65, 2.67, 2.66, 2.69, 2.65, 2.66]
lmbd_x = [2.96, 4.04, 2.96, 3.77, 2.22, 3.01, 2.55]

# counter
j = 0

# начальная глубина
prev_val = x_slices[0]

# заполнение массива зависимости коэф температуропроводности от глубины
for i, val in enumerate(x_slices):
    if i > 0:
        while j * h + h/2 in range(prev_val, val):
            l_x[j] = lmbd_x[i-1]
            a_x[j] = lmbd_x[i-1] / (c_x[i-1] * rho_x[i-1]) * 3600 / 1000
            j = j + 1
            if j > M:
                break
        prev_val = val

# выбор шага по времени
tau = h ** 2 // (2 * max(a_x))  # ч

# тепловой поток
q_0 = 0.1  # Вт / м^2
q_x = 0.057  # Вт / м^2

# численное решение уравнения теплопролводности с переменным коэффициентом
T = np.zeros([N, M + 1])

# задание граничных условий
T[:, 0] = cond.T_0

# задание начального условия
for i in range(M + 1):
    if i > 0:
        T[0, i] = T[0, i-1] + q_0 * h / l_x[i]

for i, ti in enumerate(T):
    if i > 0:
        # вычисление температуры во внутренних точках
        ti[1:-1] = T[i - 1][1:-1] + tau / (h ** 2) \
                   * (a_x[:-2] * T[i - 1][:-2] - (a_x[:-2] + a_x[2:]) * T[i - 1][1:-1] + a_x[2:] * T[i - 1][2:])
        # вычисление температуры на правой границе
        ti[-1] = 1/3 * (4 * T[i][-2] - T[i][-3] + q_x / l_x[M] * h * 2)


# отрисовка графика
fig1, ax1 = plt.subplots()

x = np.linspace(L_0, L_0 + L + h, M + 1)

# температурные кривые
for i in range(5):
    plt.plot(x, T[4000 * i],
                 color=f.colors1[i], label=str(int(round(2000 * i * tau / (24 * 365), -2))) + ' лет', linewidth=4)

# настройка подписей осей и пр.
f.plot_setup(r'$x, м$', r'$T, ^{o}С$',
             '', [0., 2000.], [20., 100.], ax1, 250, 10)
# подпись материалов на графике
f.text_on_plot(ax1, 1100, 28.2, '$q_0 = 100$ $ мВт/м^2$ \n $q = 57$ $ мВт/м^2$')

plt.show()
